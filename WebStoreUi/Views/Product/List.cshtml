
@using WebStoreDomain.Entities
@using WebStoreUi.HtmlHelpers
@using WebStoreUi.Models

@*@model  IEnumerable<Product>*@
@model ProductListViewModel

@{
    ViewBag.Title = "Goods";
}




<style>

    .e:hover {
        color: blueviolet;
        border: 3px solid black;
    }

    #categories:hover {
        font-weight: 900;
        color: gray;
    }

    #actionhover :hover {
        text-decoration: underline;
        font-weight: 600;
        color: gray;
    }
</style>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
        .btn1 {
            background-color: DodgerBlue;
            border: none;
            color: white;
            padding: 12px 16px;
            font-size: 16px;
            cursor: pointer;
        }

        /* Darker background on mouse-over */
        .btn1:hover {
            background-color: RoyalBlue;
        }
</style>



<h2 style="text-align: center; font-weight:  800; font-size: xx-large; ">Goods</h2>

<div style=" display: flex; text-align: center;   justify-content: center; /* center items horizontally, in this case */
    flex-direction:row; font-weight:800;  margin: 20px; text-decoration: underline; ">

    <div id="categories" style=" width: 20%;  ">АКЦИОННЫЕ ТОВАРЫ</div>
    <div id="categories" style=" width: 20%; ">ДЛЯ ТЕЛА</div>
    <div id="categories" style=" width: 20%; ">КОСМЕТИКА ДЛЯ ЛИЦА</div>
</div>

<div>
    <h2>@Html.ActionLink("Add", "Add")</h2>
</div>

<div style="margin: 20px; ">
    Главная > Товары
</div>





<div style="background-color:   beige; display: flex;   flex-direction:row; flex-wrap: wrap; ">
    @foreach (var good in @Model.Products)
    {
        <div class="e" style="background-color: beige; height: 490px; width: 49%;  margin: 5px; border: 1px solid black; text-align: center;">
            <h2>@Html.ActionLink(good.Name, "Details", new { id = good.Id })</h2>
          @*  <img src="@Url.Content(good.Src)" style="margin: 4px; width: 70%; height: 70%;" />*@
            <h5>@good.Description</h5>
            <p>Price: @good.Price $</p>

            <div>
                <button class="btn1"><i class="fa fa-trash"> @Html.ActionLink("Delete", "Delete", new { id = good.Id })</i></button>
                <button class="btn1"><i class="fa fa-edit"> @Html.ActionLink("Edit", "Edit", new { id = good.Id })</i></button>
            </div>
        </div>
                          
            @*<div>
                    <p>@good.Name</p>
                    <p>@good.Price.ToString("# $")</p>
                </div>*@
    }
</div>






    <div>
        @Html.PageLinks(Model.PagingInfo, i => Url.Action("List", new { page = i }))
    </div>



        @*<h2>Goods</h2>
            @foreach (var good in @Model)
            {
                <div>
                    <p>@good.Name</p>
                    <p>@good.Price.ToString("# $")</p>
                </div>
            }*@









        @*<div >
            @{
                int totalPage = (int)Math.Ceiling((double) ViewBag.Count / ViewBag.PageSize);

            }
            @for (int i = 0; i < totalPage; i++)
            {

                string str = (i + 1 == ViewBag.CurrentPage) ? "select btn btn-success  btn-lg " : "btn btn-default";

                @*if (totalPage == ViewBag.CurrentPage )
                {
                    @Html.ActionLink($"{i + 1}", "List", "Product", new { page = i + 1 }, new { @class = "btn btn-success" });
                }
                else
                @*{*@
        @*  @Html.ActionLink($"{i + 1}", "List", "Product", new { page = i + 1 }, new { @class = str });*@
        @*}

            }*@


        @*</div>*@



